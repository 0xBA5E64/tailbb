# Heavily referenced from github starter-workflows template:
# https://github.com/actions/starter-workflows/blob/61d42c9d0c8d4a398799a581eb6ce48ca742a2bc/ci/docker-publish.yml

name: Build container image
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      
      - name: Prepare Rust Toolchain
        run: rustup toolchain install stable --profile minimal
      
      - name: Prepare Rust Linux-MUSL Target
        run: |
          rustup target add x86_64-unknown-linux-musl
          sudo rm /var/lib/man-db/auto-update
          sudo apt update
          sudo apt install -y gcc musl-tools

      - name: Prepare Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Build Rust Project
        run: cargo build -r --target=x86_64-unknown-linux-musl

      - name: Collect Build
        run: tar cJf tailbb.txz readme.txt templates static -C target/x86_64-unknown-linux-musl/release tailbb

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tailbb-musl-build
          path: |
            tailbb.txz
            Dockerfile-bin
          compression-level: 0

  containerize-and-push:
    name: Build & push container image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write

    steps:
      - name: Login to GHCR
        id: docker-login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        id: docker-setup
        uses: docker/setup-buildx-action@v3
      
      - name: Generate Docker Metadata
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
      
      - name: Pull build artifact
        uses: actions/download-artifact@v5
        with:
          name: tailbb-musl-build

      - name: Build & Push docker image
        id: docker-build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-bin
          push: ${{ github.event_name != 'pull_request' }} # Don't push on pulls to avoid griefing.
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
  
  deploy-to-hetzling-via-ts:
    name: Deploy to `hetzling` over Tailscale
    runs-on: ubuntu-latest
    needs: containerize-and-push
    steps:
      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          use-cache: 'true'
      - name: Update deployment over SSH
        run: |
          ssh -o StrictHostKeyChecking=no newt@100.125.93.83 "cd ~/tailbb && docker compose up -d --pull=always"
